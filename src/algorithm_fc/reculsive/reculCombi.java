package algorithm_fc.reculsive;

public class reculCombi {
    //정수 4를 1,2,3의 조합으로 나타내는 방법은 다음과 같이 총 7가지가 존재한다
    //정수 n이 입력으로 주어질때, n을 1,2,3의 합으로 나타낼 수 있는 밥법의 수를 구하시오
    /*
    * n = 2 / 2가지
    * 1+1
    * 2
    * */

    /*
    * n = 3 / 4가지지
     1+1+1
    * 1+2
    * 2+1
    * 3
    * */

    /*
    * n = 4 // 7가지
    * 1+1+1+1
    * 1+1+2
    * 1+2+1
    * 2+1+1
    * 2+2
    * 1+3
    * 3+1
    * */

    /*
    * n = 5   // 13가지
    * 1+1+1+1+1
    * 1+1+1+2
    * 1+1+2+1
    * 1+2+1+1
    * 2+1+1+1
    * 1+2+2
    * 2+1+2
    * 2+2+1
    * 1+1+3
    * 1+3+1
    * 3+1+1
    * 2+3
    * 3+2
    * */

    /*
    * n = 6 //
    * 1+1+1+1+1+1+1
    * 1+1+1+1+1+2
    * 1+1+1+1+2+1
    * 1+1+1+2+1+1
    * 1+1+2+1+1+1
    * 1+2+1+1+1+1
    * 2+1+1+1+1+1
    * 1+1+2+2
    * 1+2+1+2
    * 2+1+1+2
    * 2+1+2+1
    * 2+2+1+1
    * 2+2+2
    * 1+2+3
    * 2+1+3
    * 1+3+2
    * 3+1+2
    * 3+2+1
    * 2+3+1
    * 3+3
    * */

    /**
     * 따라서
     * n > 3 일때
     * f(n) = f(n-1) + f(n-2) + f(n-3)
     *
     * f(1) = 1
     * f(2) = 2
     * f(3) = 4
     * */

    public static int oneTwoThreeSum(int a) {
        if (a == 1) {
            return 1;
        }
        if ( a == 2) {
            return 2;
        }
        if( a == 3) {
            return 4;
        }
        return oneTwoThreeSum(a-1) + oneTwoThreeSum(a-2) + oneTwoThreeSum(a-3);
    }


    public static void main(String[] args) {
        System.out.println(oneTwoThreeSum(6));
    }



}
